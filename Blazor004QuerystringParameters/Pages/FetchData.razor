@page "/fetchdata"

@using Blazor004QuerystringParameters.Data
@inject WeatherForecastService ForecastService

<h1>@PageTitle</h1>
<h4>Weather summary count:</h4>
<ul>
    @foreach(var type in WeatherSummaryTypes)
    {
        <li>@type (@(forecasts?.Count(x => x.Summary == type) ?? 0))</li>
    }
</ul>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter, SupplyParameterFromQuery]
    public string? PageTitle { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "WeatherSummaryType")]
    public string[] WeatherSummaryTypes { get; set; } = default!;

    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}

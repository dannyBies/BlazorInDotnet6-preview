@page "/"

<h1>Hello, world!</h1>

<EditForm Model="@person">
    <p>
        Name: <InputText @ref="inputTextReference" @bind-Value="person.Name" placeholder="Enter your name" />
        <button @onclick="async () => await FocusAsync(inputTextReference?.Element)">Focus</button>
    </p>
    <p>
        Age (years): <InputNumber @ref="inputNumberReference" @bind-Value="person.Age" placeholder="Enter your age" />
        <button @onclick="async () => await FocusAsync(inputNumberReference?.Element)">Focus</button>
    </p>  
    <p>
        Description: <InputTextArea @ref="inputTextAreaReference" @bind-Value="person.Comments" placeholder="Tell us about yourself" />
        <button @onclick="async () => await FocusAsync(inputTextAreaReference?.Element)">Focus</button>
    </p>
    <p>
        Birthday: <InputDate @ref="inputDateReference" @bind-Value="person.BirthDay" placeholder="Enter the date" />
        <button @onclick="async () => await FocusAsync(inputDateReference?.Element)" value="Focus">Focus</button>
    </p>
    <p>
        Gender:
        <InputSelect @ref="inputSelectReference" @bind-Value="person.Gender" size="4">
            <option value="@Gender.Other">Other</option>
            <option value="@Gender.Male">Male</option>
            <option value="@Gender.Female">Female</option>
        </InputSelect>
        <button @onclick="async () => await FocusAsync(inputSelectReference?.Element)">Focus</button>
    </p>
    <p>
        Identifying photo:
        <InputFile @ref="inputFileReference"  class="input-control" />
        <button @onclick="async () => await FocusAsync(inputFileReference?.Element)" value="Focus">Focus</button>
    </p>
    <p>
        Accepts terms: <InputCheckbox @ref="inputCheckboxReference" @bind-Value="person.IsSoftwareEngineer" title="You have to check this"  class="input-control" />
        <button @onclick="async () => await FocusAsync(inputCheckboxReference?.Element)">Focus</button>
    </p>
</EditForm>

@code{
    InputText? inputTextReference;
    InputNumber<int>? inputNumberReference;
    InputTextArea? inputTextAreaReference;
    InputDate<DateTime>? inputDateReference;
    InputSelect<Gender>? inputSelectReference;
    InputCheckbox? inputCheckboxReference;
    InputFile? inputFileReference;

    Person person = new Person();

    public async Task FocusAsync(ElementReference? elementReference)
    {
        if (elementReference != null)
        {
            await elementReference.Value.FocusAsync();
        }
    }


    enum Gender { Male, Female, Other }
    class Person
    {
        public string Name { get; set; } = default!;
        public int Age { get; set; } = default!;
        public Gender Gender { get; set; } = default!;
        public DateTime BirthDay { get; set; } = default!;
        public bool IsSoftwareEngineer { get; set; } = default!;
        public string Comments { get; set; } = default!;
    }
}